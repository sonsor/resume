var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.516,1,1.516]],["body/controllers/AppController.html",[0,2.014,1,2.014,2,2.079,3,0.608,4,0.515,5,0.515,6,2.079,7,0.608,8,1.5,9,1.973,10,2.836,11,2.602,12,2.602,13,0.054,14,2.602,15,1.099,16,2.602,17,1.271,18,1.271,19,1.271,20,3.55,21,1.099,22,0.944,23,2.602,24,2.602,25,2.602,26,0.515,27,1.479,28,2.602,29,1.476,30,2.602,31,2.602,32,0.608,33,0.608,34,2.079,35,2.602,36,2.602,37,2.602,38,1.099,39,2.602,40,0.027,41,0.037,42,0.027]],["title/modules/AppModule.html",[43,0.978,44,1.516]],["body/modules/AppModule.html",[1,2.083,2,2.504,3,0.509,4,0.431,5,0.431,13,0.051,22,1.091,26,0.431,32,0.509,33,0.509,40,0.023,41,0.033,42,0.023,43,1.344,44,2.74,45,0.92,46,0.92,47,1.236,48,1.236,49,0.92,50,2.083,51,1.236,52,1.74,53,1.74,54,1.74,55,2.163,56,1.872,57,2.163,58,1.778,59,1.236,60,1.236,61,2.179,62,2.504,63,2.179,64,2.179,65,2.179,66,2.179,67,2.179,68,1.74,69,3.135,70,2.179,71,2.179,72,1.74,73,2.179,74,2.179,75,2.179,76,2.179,77,2.179]],["title/injectables/AppService.html",[57,1.305,78,0.36]],["body/injectables/AppService.html",[3,0.718,4,0.608,5,0.608,7,0.718,8,1.675,13,0.054,15,1.298,21,1.298,22,0.718,26,0.608,32,0.718,33,0.718,38,1.298,40,0.032,41,0.042,42,0.032,57,1.936,78,0.534,79,1.125,80,2.454,81,4.637,82,3.072,83,2.249,84,3.072,85,3.072]],["title/modules/AuthModule.html",[43,0.978,55,1.305]],["body/modules/AuthModule.html",[3,0.472,4,0.399,5,0.399,13,0.052,22,1.069,26,0.399,27,1.783,32,0.472,33,0.472,40,0.021,41,0.031,42,0.021,43,1.287,45,0.853,46,0.853,47,1.146,48,1.146,49,0.853,50,1.995,51,1.995,55,2.401,56,1.823,58,1.683,59,1.146,60,1.146,62,2.37,86,1.613,87,2.02,88,1.613,89,1.613,90,2.107,91,2.107,92,2.02,93,1.613,94,2.02,95,2.967,96,0.986,97,2.02,98,1.346,99,1.146,100,1.613,101,2.02,102,2.02,103,2.02,104,1.346,105,1.613,106,2.02,107,2.02,108,2.02]],["title/injectables/AuthService.html",[27,0.978,78,0.36]],["body/injectables/AuthService.html",[3,0.412,4,0.348,5,0.348,7,0.412,8,1.132,9,2.003,10,2.14,13,0.055,15,1.369,17,1.583,18,1.583,19,1.583,21,1.132,22,0.757,26,0.348,27,0.981,32,0.412,33,0.412,38,1.369,40,0.034,41,0.028,42,0.019,78,0.361,79,0.645,83,2.327,98,1.174,109,1.407,110,2.679,111,1.52,112,1.762,113,1.733,114,4.264,115,1.762,116,1.187,117,2.679,118,1.762,119,2.054,120,2.679,121,3.621,122,1.762,123,1.52,124,1.785,125,1.762,126,2.14,127,2.589,128,1.407,129,1.762,130,1.762,131,1.174,132,1.762,133,1.407,134,1.407,135,1.762,136,1.762,137,1.762,138,1.762]],["title/injectables/JwtStrategy.html",[78,0.36,90,1.305]],["body/injectables/JwtStrategy.html",[3,0.544,4,0.46,5,0.46,7,0.544,8,1.388,9,1.86,13,0.055,15,1.388,17,1.137,18,1.137,19,1.137,21,0.984,22,0.967,26,0.46,32,0.544,33,0.544,38,0.984,40,0.024,41,0.035,42,0.024,78,0.442,79,0.852,90,1.605,96,1.137,99,1.321,100,1.86,105,1.86,111,2.161,116,0.852,123,1.321,133,1.86,139,1.86,140,2.625,141,2.328,142,3.286,143,2.328,144,2.328,145,1.86,146,1.551,147,1.86,148,1.86,149,1.551,150,1.86,151,1.86,152,2.328,153,2.328,154,2.328,155,2.328,156,2.328,157,1.86,158,2.328,159,2.328]],["title/injectables/LocalAuthGuard.html",[29,1.516,78,0.36]],["body/injectables/LocalAuthGuard.html",[3,0.777,4,0.658,5,0.658,13,0.053,22,0.974,26,0.658,29,2.366,32,0.777,33,0.777,40,0.035,41,0.044,42,0.035,78,0.561,79,1.218,96,1.624,149,2.216,160,2.657,161,2.657,162,3.327,163,3.327]],["title/injectables/LocalStrategy.html",[78,0.36,91,1.305]],["body/injectables/LocalStrategy.html",[3,0.492,4,0.417,5,0.417,7,0.492,8,1.292,9,1.759,13,0.055,15,1.292,17,1.494,18,1.494,19,1.494,21,0.89,22,0.923,26,0.417,27,1.603,32,0.492,33,0.492,34,1.682,38,0.89,40,0.022,41,0.032,42,0.022,78,0.412,79,0.771,83,2.485,91,1.494,93,1.682,96,1.028,111,1.195,116,1.12,119,2.043,123,1.195,124,2.038,127,1.682,128,1.682,131,2.634,140,2.443,145,1.682,146,1.403,148,1.682,149,1.403,150,1.682,151,1.682,164,1.682,165,2.106,166,2.106,167,3.059,168,2.106,169,3.059,170,1.682,171,2.106,172,2.106,173,1.682]],["title/modules/UserModule.html",[43,0.978,56,1.129]],["body/modules/UserModule.html",[3,0.619,4,0.524,5,0.524,13,0.053,22,0.839,26,0.524,32,0.619,33,0.619,40,0.028,41,0.038,42,0.028,43,1.493,45,1.119,46,1.119,47,1.503,48,1.503,49,1.119,50,2.314,51,2.314,56,2.037,58,2.039,59,1.503,60,1.503,113,2.16,174,2.116,175,2.116,176,2.116,177,2.649,178,2.649]],["title/injectables/UserService.html",[78,0.36,113,1.129]],["body/injectables/UserService.html",[3,0.455,4,0.385,5,0.385,7,0.455,8,1.221,9,1.681,13,0.055,15,1.455,17,0.951,18,0.951,19,0.951,21,0.823,22,0.455,26,0.385,32,0.675,33,0.455,38,0.823,40,0.02,41,0.03,42,0.02,78,0.389,79,0.713,83,1.953,104,1.298,111,1.953,113,1.221,116,1.261,119,1.953,123,2.307,124,1.925,126,2.75,131,2.294,134,1.556,157,2.75,179,1.298,180,2.889,181,3.443,182,3.443,183,2.889,184,2.889,185,2.889,186,1.948,187,1.948,188,2.75,189,1.948,190,1.948,191,3.443,192,3.443,193,3.443,194,1.948,195,2.75,196,1.948,197,1.948,198,1.948]],["title/coverage.html",[199,2.409]],["body/coverage.html",[0,1.451,1,1.451,5,0.506,6,2.042,13,0.053,27,0.936,29,1.451,40,0.027,41,0.037,42,0.027,49,1.08,57,1.248,78,0.628,80,2.042,90,1.248,91,1.248,99,1.451,109,2.042,113,1.08,116,0.936,139,2.042,160,2.042,161,2.042,164,2.042,173,2.042,179,1.704,199,1.704,200,2.557,201,2.557,202,2.557,203,4.936,204,3.508,205,3.508,206,4.005,207,3.508,208,2.042,209,2.557,210,2.042,211,2.557,212,2.557,213,2.557]],["title/dependencies.html",[46,1.354,214,2.247]],["body/dependencies.html",[13,0.055,26,0.533,40,0.028,41,0.038,42,0.028,46,1.14,68,2.155,72,2.155,96,1.317,98,1.797,146,2.743,147,2.155,170,2.155,215,4.116,216,2.697,217,2.697,218,3.638,219,2.697,220,2.697,221,3.638,222,2.697,223,2.697,224,2.697,225,2.697,226,2.697,227,2.697,228,2.697,229,2.697,230,2.697,231,2.697,232,2.697,233,2.697,234,2.697,235,2.697,236,2.697,237,2.697,238,2.697]],["title/miscellaneous/functions.html",[239,0.949,240,2.56]],["body/miscellaneous/functions.html",[7,0.883,13,0.047,40,0.04,41,0.047,42,0.04,49,2.036,210,3.021,239,1.598,240,3.021,241,3.782]],["title/index.html",[7,0.525,242,2.247,243,2.247]],["body/index.html",[4,0.429,13,0.053,40,0.023,41,0.033,42,0.023,199,1.445,244,2.168,245,2.168,246,3.124,247,2.168,248,2.168,249,2.168,250,2.168,251,2.168,252,2.168,253,2.168,254,2.168,255,2.168,256,2.168,257,3.662,258,2.168,259,2.168,260,2.168,261,2.168,262,4.559,263,2.168,264,2.168,265,2.168,266,4.424,267,2.168,268,2.168,269,3.124,270,2.168,271,2.168,272,2.168,273,2.168,274,3.124,275,3.124,276,2.168,277,2.168,278,2.168,279,3.124,280,3.124,281,2.168,282,2.168,283,2.168,284,2.168,285,2.168,286,1.732,287,2.168,288,2.168,289,2.168,290,2.168,291,2.168,292,2.168,293,2.168,294,2.168,295,2.168,296,2.168,297,2.168,298,2.168,299,2.168,300,2.168,301,2.168,302,2.168,303,2.168,304,2.168]],["title/modules.html",[45,1.527]],["body/modules.html",[13,0.046,40,0.037,41,0.046,42,0.037,44,2.008,45,1.495,55,1.728,56,1.495,286,3.741,305,4.683,306,4.683,307,4.683]],["title/overview.html",[308,2.888]],["body/overview.html",[0,1.28,13,0.052,27,1.689,40,0.024,41,0.034,42,0.024,43,0.826,44,2.675,45,0.953,46,0.953,47,1.28,48,1.28,49,0.953,50,1.28,51,1.28,52,1.803,53,1.803,54,1.803,55,2.429,56,1.949,57,1.828,58,1.824,59,1.28,60,1.28,79,0.826,86,1.803,88,1.803,89,1.803,90,1.828,91,1.828,113,1.949,174,1.803,175,1.803,176,1.803,188,1.803,195,1.803,308,1.803,309,2.257]],["title/miscellaneous/typealiases.html",[239,0.949,310,3.205]],["body/miscellaneous/typealiases.html",[7,0.883,13,0.047,40,0.04,41,0.047,42,0.04,116,1.385,119,2.559,179,2.52,239,1.598,311,3.782,312,3.782]],["title/miscellaneous/variables.html",[239,0.949,313,2.56]],["body/miscellaneous/variables.html",[7,0.82,13,0.053,40,0.037,41,0.045,42,0.037,99,2.446,104,2.34,116,1.286,208,2.805,239,1.484,313,2.805,314,3.512,315,3.512,316,3.512,317,3.512,318,3.512]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":206,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":207,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":205,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":188,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["1.0.0",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":193,"title":{},"body":{"injectables/UserService.html":{}}}],["3",{"_index":195,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["3.0.2",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["3600s",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["5.9.25",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":309,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["aliases",{"_index":311,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":287,"title":{},"body":{"index.html":{}}}],["angular",{"_index":255,"title":{},"body":{"index.html":{}}}],["app",{"_index":264,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/auth.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/auth.service",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["app/auth/guard/local",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["app/user/user.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":252,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":44,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":57,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["auth.guard",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["auth.guard.ts",{"_index":161,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["authguard",{"_index":162,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authguard('local",{"_index":163,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":55,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":297,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":27,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["backers",{"_index":288,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":307,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":305,"title":{},"body":{"modules.html":{}}}],["building",{"_index":247,"title":{},"body":{"index.html":{}}}],["changeme",{"_index":190,"title":{},"body":{"injectables/UserService.html":{}}}],["chris",{"_index":194,"title":{},"body":{"injectables/UserService.html":{}}}],["class",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":174,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":175,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":176,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config/configuration",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["config/constants",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["constants",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constants.secret",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":165,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(userservice",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumerkey",{"_index":191,"title":{},"body":{"injectables/UserService.html":{}}}],["consumersecret",{"_index":192,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":199,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["declarations",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":46,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":256,"title":{},"body":{"index.html":{}}}],["development",{"_index":265,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":200,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":276,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":248,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":149,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":144,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":153,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":155,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findone",{"_index":183,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(username",{"_index":185,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":246,"title":{},"body":{"index.html":{}}}],["function",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":240,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":242,"title":{"index.html":{}},"body":{}}],["grow",{"_index":283,"title":{},"body":{"index.html":{}}}],["guess",{"_index":197,"title":{},"body":{"injectables/UserService.html":{}}}],["heavily",{"_index":253,"title":{},"body":{"index.html":{}}}],["hello",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":294,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":301,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":154,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspired",{"_index":254,"title":{},"body":{"index.html":{}}}],["installation",{"_index":261,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":263,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["john",{"_index":189,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":290,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":147,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":152,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":90,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":298,"title":{},"body":{"index.html":{}}}],["legend",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":304,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":280,"title":{},"body":{"index.html":{}}}],["load",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":170,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":29,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":91,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["maria",{"_index":196,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":239,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":279,"title":{},"body":{"index.html":{}}}],["mode",{"_index":269,"title":{},"body":{"index.html":{}}}],["module",{"_index":43,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":45,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["mongoosemodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":293,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":299,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":257,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":303,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":173,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["node.js",{"_index":245,"title":{},"body":{"index.html":{}}}],["npm",{"_index":262,"title":{},"body":{"index.html":{}}}],["null",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":281,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["out",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":308,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":214,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["pass",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":146,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":148,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":150,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["payload",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":158,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":159,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":291,"title":{},"body":{"index.html":{}}}],["post",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/login",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["private",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":271,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":244,"title":{},"body":{"index.html":{}}}],["project",{"_index":282,"title":{},"body":{"index.html":{}}}],["promise",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":180,"title":{},"body":{"injectables/UserService.html":{}}}],["providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["read",{"_index":292,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"injectables/UserService.html":{}}}],["reflect",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":260,"title":{},"body":{"index.html":{}}}],["req",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":266,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":249,"title":{},"body":{"index.html":{}}}],["secret",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":156,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":250,"title":{},"body":{"index.html":{}}}],["side",{"_index":251,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":285,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.service.ts",{"_index":312,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/auth/auth.module.ts",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:13",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:22",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:7",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/guard/local",{"_index":160,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/strategy/jwt.strategy.ts",{"_index":139,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/app/auth/strategy/jwt.strategy.ts:16",{"_index":143,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/app/auth/strategy/jwt.strategy.ts:7",{"_index":141,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/app/auth/strategy/local.strategy.ts",{"_index":164,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/app/auth/strategy/local.strategy.ts:12",{"_index":168,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/app/auth/strategy/local.strategy.ts:7",{"_index":166,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/app/user/user.module.ts",{"_index":177,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/user/user.service.ts",{"_index":179,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/user/user.service.ts:36",{"_index":186,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:8",{"_index":184,"title":{},"body":{"injectables/UserService.html":{}}}],["src/config/constants.ts",{"_index":208,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":210,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":267,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":270,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":272,"title":{},"body":{"index.html":{}}}],["started",{"_index":243,"title":{"index.html":{}},"body":{}}],["starter",{"_index":259,"title":{},"body":{"index.html":{}}}],["statements",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":295,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":145,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["sub",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":151,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":286,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":306,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":275,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":278,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":277,"title":{},"body":{"index.html":{}}}],["tests",{"_index":274,"title":{},"body":{"index.html":{}}}],["testsecret",{"_index":318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thanks",{"_index":284,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":171,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.jwtservice.sign(payload",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":187,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.find(user",{"_index":198,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findone(username",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["touch",{"_index":296,"title":{},"body":{"index.html":{}}}],["true",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":302,"title":{},"body":{"index.html":{}}}],["type",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":310,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":258,"title":{},"body":{"index.html":{}}}],["ui",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":169,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":273,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["user.password",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":178,"title":{},"body":{"modules/UserModule.html":{}}}],["user.userid",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user/user.module",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":157,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":56,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["users",{"_index":182,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":113,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":140,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":142,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":167,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":313,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":268,"title":{},"body":{"index.html":{}}}],["website",{"_index":300,"title":{},"body":{"index.html":{}}}],["world",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":289,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get, Post, UseGuards, Request} from '@nestjs/common';\nimport { AuthService } from \"./app/auth/auth.service\";\nimport {LocalAuthGuard} from \"./app/auth/guard/local-auth.guard\";\n\n@Controller()\nexport class AppController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {AppController} from './app.controller';\nimport {AppService} from './app.service';\nimport {AuthModule} from './app/auth/auth.module';\nimport {UserModule} from './app/user/user.module';\nimport {ConfigModule} from \"@nestjs/config\";\nimport configuration from './config/configuration';\nimport {MongooseModule} from \"@nestjs/mongoose\";\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n          load: [configuration],\n          isGlobal: true\n        }),\n        //MongooseModule.forRoot()\n        AuthModule,\n        UserModule\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {AuthService} from './auth.service';\nimport {UserModule} from '../user/user.module';\nimport {PassportModule} from '@nestjs/passport';\nimport {JwtModule} from '@nestjs/jwt';\nimport {Constants} from '../../config/constants'\nimport {JwtStrategy} from \"./strategy/jwt.strategy\";\nimport {LocalStrategy} from \"./strategy/local.strategy\";\n\n@Module({\n    imports: [\n        UserModule,\n        PassportModule,\n        JwtModule.register({\n            secret: Constants.secret,\n            signOptions: {expiresIn: '3600s'},\n        }),\n    ],\n    providers: [AuthService, LocalStrategy, JwtStrategy],\n    exports: [AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\n\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private userService: UserService,\n        private jwtService: JwtService\n    ) {}\n\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.userService.findOne(username);\n        if (user && user.password === pass) {\n            const { password, ...result } = user;\n            return result;\n        }\n        return null;\n    }\n\n    async login(user: any) {\n        const payload = { username: user.username, sub: user.userId };\n        return {\n            access_token: this.jwtService.sign(payload),\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/strategy/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/strategy/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Constants } from '../../../config/constants'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: Constants.secret,\n        });\n    }\n\n    async validate(payload: any) {\n        return { userId: payload.sub, username: payload.username };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/strategy/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/strategy/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super();\n    }\n\n    async validate(username: string, password: string): Promise {\n        const user = await this.authService.validateUser(username, password);\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\n\n@Module({\n  providers: [UserService],\n  exports: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nexport type User = any;\n\n\n@Injectable()\nexport class UserService {\n    private readonly users: User[];\n\n    constructor() {\n        this.users = [\n            {\n                userId: 1,\n                username: 'john',\n                password: 'changeme',\n                consumerKey: '1',\n                consumerSecret: '1'\n            },\n            {\n                userId: 2,\n                username: 'chris',\n                password: 'secret',\n                consumerKey: '2',\n                consumerSecret: '2'\n            },\n            {\n                userId: 3,\n                username: 'maria',\n                password: 'guess',\n                consumerKey: '3',\n                consumerSecret: '3'\n            },\n        ];\n    }\n\n    async findOne(username: string): Promise {\n        return this.users.find(user => user.username === username);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            Constants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            mongoose : ^5.9.25\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../user.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/user/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Constants   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Constants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret:  'testsecret'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
